{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ana96/OneDrive/Documentos/GitHub/parallaxForest/Front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ana96/OneDrive/Documentos/GitHub/parallaxForest/Front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"C:/Users/ana96/OneDrive/Documentos/GitHub/parallaxForest/Front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\ana96\\\\OneDrive\\\\Documentos\\\\GitHub\\\\parallaxForest\\\\Front\\\\src\\\\components\\\\Mapa\\\\coordenadas.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Coordenadas() {\n  _s();\n  var _useState = useState([0, 0]),\n    _useState2 = _slicedToArray(_useState, 2),\n    posicion = _useState2[0],\n    setPosicion = _useState2[1];\n  useEffect(function () {\n    navigator.geolocation.getCurrentPosition(function (pos) {\n      setPosicion([pos.coords.latitude, pos.coords.longitude]);\n    }, function (error) {\n      return console.log(error);\n    });\n  }, []);\n  var handleEnviarCoordenadas = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var _posicion, latitude, longitude, response, jsonResponse;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _posicion = _slicedToArray(posicion, 2), latitude = _posicion[0], longitude = _posicion[1];\n            _context.next = 3;\n            return fetch('http://127.0.0.1:8000/create', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                Latitud: latitude,\n                Longitud: longitude\n              })\n            });\n          case 3:\n            response = _context.sent;\n            if (!response.ok) {\n              _context.next = 12;\n              break;\n            }\n            console.log('Coordenadas enviadas con éxito');\n            _context.next = 8;\n            return response.json();\n          case 8:\n            jsonResponse = _context.sent;\n            // Punto 1\n            console.log(jsonResponse); // Punto 1\n            _context.next = 13;\n            break;\n          case 12:\n            console.log('Error al enviar coordenadas');\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function handleEnviarCoordenadas() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mapa\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mi ubicaci\\xF3n actual:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Latitud: \", posicion[0]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Longitud: \", posicion[1]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEnviarCoordenadas,\n      children: \"Enviar coordenadas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 1\n  }, this);\n}\n_s(Coordenadas, \"qi/g+EkoOBGROuezxMKuy4QtRUQ=\");\n_c = Coordenadas;\nexport default Coordenadas;\nvar _c;\n$RefreshReg$(_c, \"Coordenadas\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Coordenadas","_s","_useState","_useState2","_slicedToArray","posicion","setPosicion","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","error","console","log","handleEnviarCoordenadas","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_posicion","response","jsonResponse","wrap","_callee$","_context","prev","next","fetch","method","headers","body","JSON","stringify","Latitud","Longitud","sent","ok","json","stop","apply","arguments","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ana96/OneDrive/Documentos/GitHub/parallaxForest/Front/src/components/Mapa/coordenadas.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nfunction Coordenadas() {\r\nconst [posicion, setPosicion] = useState([0, 0]);\r\n\r\nuseEffect(() => {\r\nnavigator.geolocation.getCurrentPosition(\r\n(pos) => {\r\nsetPosicion([pos.coords.latitude, pos.coords.longitude]);\r\n},\r\n(error) => console.log(error)\r\n);\r\n}, []);\r\n\r\nconst handleEnviarCoordenadas = async () => {\r\nconst [latitude, longitude] = posicion;\r\nconst response = await fetch('http://127.0.0.1:8000/create', {\r\nmethod: 'POST',\r\nheaders: {\r\n'Content-Type': 'application/json'\r\n},\r\nbody: JSON.stringify({\r\nLatitud: latitude,\r\nLongitud: longitude\r\n})\r\n});\r\nif (response.ok) {\r\nconsole.log('Coordenadas enviadas con éxito');\r\nconst jsonResponse = await response.json(); // Punto 1\r\nconsole.log(jsonResponse); // Punto 1\r\n} else {\r\nconsole.log('Error al enviar coordenadas');\r\n}\r\n}\r\n\r\nreturn (\r\n<div className=\"mapa\">\r\n<h2>Mi ubicación actual:</h2>\r\n<p>Latitud: {posicion[0]}</p>\r\n<p>Longitud: {posicion[1]}</p>\r\n<button onClick={handleEnviarCoordenadas}>Enviar coordenadas</button>\r\n</div>\r\n);\r\n}\r\nexport default Coordenadas"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}